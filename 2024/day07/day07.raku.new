#!/usr/bin/env raku
my ($part1, $part2) »=» 0;
for lines() -> $line {
    my ($goal, $components) = $line.split(':')».words;
    if try-to-make($goal, $components, False) {
        $part1 += $goal;
        $part2 += $goal;
    } elsif try-to-make($goal, $components, True) {
        $part2 += $goal;
    }
}
say $part1;
say $part2;

sub try-to-make($goal, $components, $with-concat) {
    return True if @$components eqv [$goal];
    my $last = $components[*-1];
    return False if $last >= $goal;

    # try + 
    return True if try-to-make($goal - $last, $components[0..*-2], $with-concat);

    # try * 
    if $goal %% $last {
        return True if try-to-make($goal / $last, $components[0..*-2], $with-concat);
    }

    if $with-concat && $goal =~ / ^( .* ) $last $ / {
        return True if try-to-make($0, $components[0..*-2], $with-concat);
    }
    return False;
}
